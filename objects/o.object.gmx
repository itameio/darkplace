<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///creation
name = object_get_name(id);

if(room_exists(room + 1)){
    room_goto_next()
}


cellwidth = 64;
cellheight = 64;
hcells = 1440 / 64;
vcells = 900 / 64;
grid = mp_grid_create(0, 0, hcells, vcells, cellwidth, cellheight);

player = noone;

debug = true;

camera = instance_create(x, y, ocamera)









</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///step
if(debug){
    if(kbrd(vk_enter)){game_restart();}
    if(kbrd(vk_escape) || mbp(mb_middle)){game_end();}
}

if(kbrdp(vk_alt)){debug = !debug}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug
if(instance_number(oitem)&lt;5){
    var xx = random(room_width)
    var yy = random(room_height)
    crt(xx, yy, oitem);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///creation

    
cellwidth = 64;
cellheight = 64;
hcells = 1440 / 64;
vcells = 900 / 64;
draw_grid = true;
grid = mp_grid_create(0, 0, hcells, vcells, cellwidth, cellheight)

/*
screen_w = display_get_width()
screen_h = display_get_height()

window_set_fullscreen(true)

window_set_size(screen_w, screen_h);








view_wport[0] = screen_w;
view_wview[0] = screen_w;

view_hport[0] = screen_h;
view_hview[0] = screen_h;

view_hborder[0] = screen_w
view_vborder[0] = screen_h

view_visible[0] = true;
view_enabled = true;






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw
depth = -room_width;

var draw_grid = false;

//show player above grid for debug
if(debug and exists(player) and player.depth&gt;=depth){player.depth = depth - 1;}

//draw grid
if(debug and kbrd(vk_alt) and kbrd("G")){
    mp_grid_draw(o.grid)
}

if(draw_grid){

    var cell_number = 0
    
    for(i=0; i&lt;(vcells); i++){
        for(ii=0; ii&lt;(hcells); ii++){
            
            cell = mp_grid_get_cell(grid, ii, i)
            
            var filled = false;
            if(cell==0){filled=true;}
            
            
            
            if(point_in_rectangle(mouse_x, mouse_y, ii*cellwidth, i*cellheight, (ii*cellwidth)+cellwidth, (i*cellheight)+cellheight)){
                filled = true;
                draw_set_color(c_lime)
            }
           
            draw_rectangle(ii*cellwidth, i*cellheight, (ii*cellwidth)+cellwidth, (i*cellheight)+cellheight, filled)
            
            draw_set_color(c_yellow)
            draw_text(ii*cellwidth, i*cellheight, "cell-"+string(cell_number)+"#fill: "+string(cell)+"#x: "+string(ii)+"#y: "+string(i))
            
            
            cell_number++
            
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
